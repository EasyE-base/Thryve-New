rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Allow users to read/write their own user document
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Allow authenticated users to read all users (for discovery)
    match /users/{userId} {
      allow read: if request.auth != null;
    }
    
    // Classes collection rules
    match /classes/{classId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && 
        (get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'instructor' ||
         get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'merchant');
      allow update, delete: if request.auth != null && 
        (request.auth.uid == resource.data.instructorId ||
         request.auth.uid == resource.data.studioId);
    }
    
    // Bookings collection rules
    match /bookings/{bookingId} {
      allow read: if request.auth != null && 
        (request.auth.uid == resource.data.customerId ||
         request.auth.uid == resource.data.instructorId ||
         request.auth.uid == resource.data.studioId);
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.customerId;
      allow update: if request.auth != null && 
        (request.auth.uid == resource.data.customerId ||
         request.auth.uid == resource.data.instructorId);
    }
    
    // Reviews collection rules
    match /reviews/{reviewId} {
      allow read: if true; // Public reviews
      allow create: if request.auth != null && 
        request.auth.uid == request.resource.data.customerId;
      allow update, delete: if request.auth != null && 
        request.auth.uid == resource.data.customerId;
    }
  }
} 