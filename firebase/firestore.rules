rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Users can read and write their own profile
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;
      
      // Allow reading basic profile info for other users (for instructor/studio discovery)
      allow read: if request.auth != null && 
        resource.data.keys().hasOnly(['name', 'role', 'profileCompleted']);
    }
    
    // Studios collection - studio owners can manage their own studio
    match /studios/{studioId} {
      allow read: if request.auth != null && resource.data.isActive == true;
      allow write: if request.auth != null && 
        (resource.data.ownerId == request.auth.uid || 
         request.auth.uid in resource.data.get('instructors', []));
      
      // Studio owners can create new studios
      allow create: if request.auth != null && 
        request.auth.token.role == 'studio_owner' &&
        request.resource.data.ownerId == request.auth.uid;
    }
    
    // Classes collection - public read, restricted write
    match /classes/{classId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && 
        (resource.data.instructorId == request.auth.uid ||
         resource.data.studioOwnerId == request.auth.uid);
    }
    
    // Bookings collection - users can manage their own bookings
    match /bookings/{bookingId} {
      allow read, write: if request.auth != null && 
        resource.data.userId == request.auth.uid;
      
      // Studio owners and instructors can read bookings for their classes
      allow read: if request.auth != null && 
        (resource.data.instructorId == request.auth.uid ||
         resource.data.studioOwnerId == request.auth.uid);
    }
    
    // Payments collection - users can read their own payment history
    match /payments/{paymentId} {
      allow read: if request.auth != null && resource.data.userId == request.auth.uid;
      allow write: if false; // Payments should only be written by Cloud Functions
    }
    
    // Reviews collection - users can write reviews for classes they've taken
    match /reviews/{reviewId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      allow update, delete: if request.auth != null && 
        resource.data.userId == request.auth.uid;
    }
    
    // Messages collection - users can read/write their own conversations
    match /messages/{messageId} {
      allow read, write: if request.auth != null && 
        (request.auth.uid in resource.data.participants);
    }
    
    // Admin-only collections
    match /admin/{document=**} {
      allow read, write: if request.auth != null && 
        request.auth.token.admin == true;
    }
    
    // Analytics collection - read-only for authenticated users
    match /analytics/{document=**} {
      allow read: if request.auth != null;
      allow write: if false; // Only Cloud Functions should write analytics
    }
    
    // Default deny for any other collections
    match /{document=**} {
      allow read, write: if false;
    }
  }
}